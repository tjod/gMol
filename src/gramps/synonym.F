C *************************************************************
C This file contains source code for the gMol computer program
C  Copyright (C) 1981-2010 by TJ O'Donnell and
C  Copyright (C) 2005-2010 gNova, Inc.
C It is unlawful to modify or remove this copyright notice.
C See the accompanying LICENSE file for further information. 
C *************************************************************
      SUBROUTINE SYNONYM(ARG,SWITCHES)
C
      IMPLICIT NONE
      CHARACTER ARG*(*)
      CHARACTER SWITCHES*(*)
C
#include "UDLIST.FOR"
#include "ERRORS.FOR"
      INTEGER NEWSIZE
	INTEGER AID, BID, VPOINT, PREFX, I
C
      CHARACTER*12 PREFIX
      CHARACTER*(NAMMAX) NAME
C
C       THIS ROUTINE MAKES A SYNONYM OF AN OBJECT
C       FIRST PARSE THE ARGUMENTS AND CHECK IF THEY'RE OK
C
      POINT=1
      VPOINT=POINT
      CALL NAMID(ARG,POINT,AID)
      IF(ERROR.NE.0)CALL TELLUSER(ERROR,*999)
      IF(AID.LE.RWORLD)THEN
        POINT=VPOINT
        CALL TELLUSER(NOTWORLDFN,*999)
      END IF
      IF(POINT.EQ.0)THEN
        IF(MATCH(SWITCHES,'MARK'))THEN
          KINDOBJ(AID)=IOR(KINDOBJ(AID),SYNOBYTE)
          GOTO 999
        ELSE
          POINT=VPOINT
          CALL TELLUSER(NONAME,*999)
        END IF
      END IF
      KINDOBJ(AID)=IOR(KINDOBJ(AID),SYNOBYTE)
      VPOINT=POINT
      CALL NAMEID(ARG,POINT,BID,NAME)
      IF(ERROR.EQ.0)ERROR=DUPNAM
      IF(ERROR.NE.OBJERR)THEN
        POINT=VPOINT
        CALL TELLUSER(ERROR,*999)
      END IF
      ERROR=0
      CALL SMATCH(SWITCHES,'PREFIX',PREFIX,PREFX)
C
C       A GROUP CAN BE SYNONYMED, BUT ITS MEMBERS
C       ARE EITHER COPIED OR SYNONYMED, AS REQUIRED.
C       SEE THE GRCOPY ROUTINE.
C       CHECK THE SIZE OF THE NEW GROUP TO BE CREATED AND
C       HOW MANY NEW OBJECTS THE COPY WILL CREATE.  DON'T
C       ALLOW THE LIMITS TO BE EXCEEDED BY A COPY.
C
      IF(TYPOBJ(AID).EQ.GROUP)THEN
c       CALL GROUPINFO(AID,START,FINISH,DEPTH,LEVEL,NEWSIZE)
c       IF(NEWSIZE.GT.MAXUDL-UDFREE)CALL TELLUSER(TOOMUCH,*999)
c       NEWTREE=FINISH-START+1
c       IF(NEWTREE+TREEEND.GT.TREESIZE)CALL TELLUSER(TOOMANY,*999)
c       NEWOBJ=0
c       DO 30 I=START,FINISH
c       IF(TREE(I).GT.GROUPEND)NEWOBJ=NEWOBJ+1
c30     CONTINUE
c       IF(NOBJ+NEWOBJ.GT.MOBJ)CALL TELLUSER(TOOMANY,*999)
C
        CALL SYNOBJ(AID,NAME)
        IF(ERROR.NE.0)CALL TELLUSER(ERROR,*999)
c       CALL GRCOPY(AID,PREFIX)
      ELSE
        CALL SYNOBJ(AID,NAME)
        IF(ERROR.NE.0)CALL TELLUSER(ERROR,*999)
        IF( BTEST(KINDOBJ(NOBJ),MENUBIT) )
     &      KINDOBJ(NOBJ)=IEOR(MENUBYTE,KINDOBJ(NOBJ))
      END IF
C
C       LET DISPLAY KNOW OF A CHANGE ON THE TREE
C
      TCHANGE=.TRUE.
 999  RETURN
      END
C
      SUBROUTINE SYNOBJ(AID,NAME)
C
      IMPLICIT NONE
	INTEGER AID
      CHARACTER NAME*(*)
C
#include "UDLIST.FOR"
#include "ERRORS.FOR"
C
	INTEGER I
      LOGICAL SETOK(MTFM)
      DATA SETOK /MTFM*.TRUE./
C
      DO 1 I=1,MTFM
      SETOK(I)=.TRUE.
  1   CONTINUE
C
C       PUT ANOTHER OBJECT IN THE DISPLAY TREE
C       BUT HAVE IT POINT AT ITS SYNONYM
C       BY SETTING THE INFO ABOUT THE SYNONYM = THE
C       INFO ABOUT THE ORIGINAL.  A SYNONYM DOES
C       HAVE AN UNIQUE NAME AND TYPE (EXTRA BIT SET).
C
      IF(NOBJ.GE.MOBJ)THEN
        ERROR=TOOMANY
        RETURN
      END IF
      IF(TREEEND.GE.TREESIZE)THEN
        ERROR=TOOMANY
        RETURN
      END IF
      NOBJ=NOBJ+1
C     FRMBASE(NOBJ)=FRMBASE(AID)
C     FRMCNT(NOBJ)=FRMCNT(AID)
      FRMCNT(NOBJ)=AID
      KINDOBJ(NOBJ)=IOR(ORDINARY,SYNOBYTE)
C
C       MAKE SURE THE NEW SYNONYM ISN'T BLANKED EVEN IF
C       THE ORIGINAL IS.
C
      IDOBJ(NOBJ)=IDOBJ(AID)
c     OBJFRSIZ(IDOBJ(NOBJ))=SIZEOBJ(AID)
c     OBJFRLOC(IDOBJ(NOBJ))=LOCOBJ(AID)
      NAMOBJ(NOBJ)=NAME
      CALL SETTFM(NOBJ,SETOK)
      CALL UNIT(FIXMAT(1,1,NOBJ))
      CALL UNIT(ARBMAT(1,1,NOBJ))
      CALL UNIT(IARBMAT(1,1,NOBJ))
C
C To signify that these are unit matrices, unadulterated.
	FIXMAT(4,4,NOBJ)=0.0
	ARBMAT(4,4,NOBJ)=0.0
	IARBMAT(4,4,NOBJ)=0.0
C
      TREEEND=TREEEND+1
      TREE(TREEEND)=NOBJ
C
C       LINEAR TRANSFORMATIONS OF A SYNONYM ARE IDENTICAL
C       TO THOSE OF THE ORIGINAL, BUT FRAME IS SEPARATE.
C       MAKE FRAMING OF THE SYNONYM LIKE THAT OF THE ORIGINAL.
C
C     TFMINC(UFRAME,NOBJ)=TFMINC(UFRAME,AID)
C     TFMVAL(UFRAME,NOBJ)=TFMVAL(UFRAME,AID)
C     DEVUSE(UFRAME,NOBJ)=DEVUSE(UFRAME,AID)
C     FNUSE(UFRAME,NOBJ) =FNUSE(UFRAME,AID)
C     LBOUND(UFRAME,NOBJ)=LBOUND(UFRAME,AID)
C     UBOUND(UFRAME,NOBJ)=UBOUND(UFRAME,AID)
C     TFMANG(UFRAME,NOBJ)=TFMANG(UFRAME,AID)
C     DFACT(UFRAME,NOBJ)=DFACT(UFRAME,AID)
C
C     CALL TFMCOPY(AID,NOBJ,UFRAME)
C     DEVUSE(SUMMARY,NOBJ)=DEVUSE(SUMMARY,AID)
C     FNUSE(SUMMARY,NOBJ)=FNUSE(SUMMARY,AID)
C
      RETURN
      END
