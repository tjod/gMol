C *************************************************************
C This file contains source code for the gMol computer program
C  Copyright (C) 1981-2010 by TJ O'Donnell and
C  Copyright (C) 2005-2010 gNova, Inc.
C It is unlawful to modify or remove this copyright notice.
C See the accompanying LICENSE file for further information. 
C *************************************************************
      SUBROUTINE MAKEPER(KNID)
C
      IMPLICIT NONE
	INTEGER KNID
#include "UDLIST.FOR"
#include "TFMMAT.FOR"
      REAL XMIN,XMAX,YMIN,YMAX,HITH,YON,EYE,W
	INTEGER NID
C
C       THIS ROUTINE CONCATENATES THE OBJECTS OWN TFM'S INTO THE
C       CURRENT MATRIX (JUST PUSHED PRESUMABLY).
C
      NID=KNID
C
C       MOVE IS JUST A POST-PERSPECTIVE TRANSLATION.
C
      IF(WLDVAL(WMOVEW,NID).LE.0)WLDVAL(WMOVEW,NID)=1
      CALL UMOVE(WLDVAL(WMOVEX,NID),
     &          WLDVAL(WMOVEY,NID),
     &          WLDVAL(WMOVEZ,NID),
     &          WLDVAL(WMOVEW,NID) )
C
C       PERSPECTIVE MATRIX.
C
      IF(WLDVAL(WWINDW,NID).LE.0.)WLDVAL(WWINDW,NID)=1.
      CALL UWINDP(WLDVAL(WWINDS,NID),WLDVAL(WWINDV,NID),
     &          WLDVAL(WWINDP,NID),WLDVAL(WWINDA,NID),
     &          WLDVAL(WWINDH,NID),WLDVAL(WWINDY,NID),
     &          WLDVAL(WWINDE,NID),WLDVAL(WWINDW,NID),
     &          WLDVAL(WFOG,NID),WLDVAL(WDEPTH,NID))
C
      IF(WINVRT)CALL USCALE(1.0,1.0,-1.0,1.0)
      RETURN
C
      ENTRY MAKETFM(KNID)
C
      NID=KNID
C
      IF(TFMVAL(UTRANW,NID).LE.0)TFMVAL(UTRANW,NID)=1
C To make perspective and fog work properly
C      IF(NID .EQ. LWORLD .OR. NID .EQ. RWORLD) Then
C        CALL UTRAN(0., 0., -WLDVAL(WWINDE,NID),WLDVAL(WWINDW,NID))
C      End If
      CALL UTRAN(
     &    TFMVAL(UTRANX,NID),TFMVAL(UTRANY,NID),TFMVAL(UTRANZ,NID),
     &    TFMVAL(UTRANW,NID))
C
      CALL UROTX(TFMVAL(UROTXX,NID))
C
      CALL UROTY(TFMVAL(UROTYY,NID))
C
      CALL UROTZ(TFMVAL(UROTZZ,NID))
C
C       ARBITRARY AXIS STUFF.
C
C     IF(OUTTING.EQ.OUTWINDOW)THEN
C       CALL MULTMA(IARBMAT(1,1,NID))
C     ELSE
C       CALL MATCON(TFMMTX(1,1,CURRENT),IARBMAT(1,1,NID) )
C     ENDIF
      If(IARBMAT(4,4,NID).NE.0)CALL TMUL(IARBMAT(1,1,NID))
C
      IF(TFMVAL(UATRANW,NID).LE.0)TFMVAL(UATRANW,NID)=1
      CALL UTRAN(
     &    TFMVAL(UATRANX,NID),TFMVAL(UATRANY,NID),TFMVAL(UATRANZ,NID),
     &    TFMVAL(UATRANW,NID))
C
      CALL UROTX(TFMVAL(UAROTX,NID))
C
      CALL UROTY(TFMVAL(UAROTY,NID))
C
      CALL UROTZ(TFMVAL(UAROTZ,NID))
C
      IF(TFMVAL(UASCALW,NID).EQ.0)TFMVAL(UASCALW,NID)=.000001
	IF(TFMVAL(UASCALW,NID).EQ.TFMVAL(UASCALX,NID) .AND.
     &     TFMVAL(UASCALW,NID).EQ.TFMVAL(UASCALY,NID) .AND.
     &     TFMVAL(UASCALW,NID).EQ.TFMVAL(UASCALZ,NID) ) Then
	Else
	      CALL USCALE(
     &    TFMVAL(UASCALX,NID),TFMVAL(UASCALY,NID),
     &    TFMVAL(UASCALZ,NID),TFMVAL(UASCALW,NID))
	End If
C
C     IF(OUTTING.EQ.OUTWINDOW)THEN
C       CALL MULTMA(ARBMAT(1,1,NID))
C     ELSE
C       CALL MATCON(TFMMTX(1,1,CURRENT),ARBMAT(1,1,NID) )
C     ENDIF
      If(ARBMAT(4,4,NID).NE.0)CALL TMUL(ARBMAT(1,1,NID))
C
      IF(TFMVAL(USCALEW,NID).EQ.0)TFMVAL(USCALEW,NID)=.000001
	IF(TFMVAL(USCALEW,NID).EQ.TFMVAL(USCALEX,NID) .AND.
     &     TFMVAL(USCALEW,NID).EQ.TFMVAL(USCALEY,NID) .AND.
     &     TFMVAL(USCALEW,NID).EQ.TFMVAL(USCALEZ,NID) ) Then
	Else
		CALL USCALE(
     &    TFMVAL(USCALEX,NID),TFMVAL(USCALEY,NID),
     &    TFMVAL(USCALEZ,NID),TFMVAL(USCALEW,NID))
	End If
C
C       INCLUDE THE FIX MATRIX.
C
C     IF(OUTTING.EQ.OUTWINDOW)THEN
C       CALL MULTMA(FIXMAT(1,1,NID))
C     ELSE
C       CALL MATCON(TFMMTX(1,1,CURRENT),FIXMAT(1,1,NID) )
C     ENDIF
      If(FIXMAT(4,4,NID).NE.0.0)CALL TMUL(FIXMAT(1,1,NID))
C
C       NORMALIZE THE CURRENT TFM MATRIX
C
      IF(OUTTING.EQ.OUTWINDOW)THEN
        CONTINUE
      ELSE
        CALL NORM(1.)
      ENDIF
C
      RETURN
      END
