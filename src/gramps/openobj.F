C *************************************************************
C This file contains source code for the gMol computer program
C  Copyright (C) 1981-2010 by TJ O'Donnell and
C  Copyright (C) 2005-2010 gNova, Inc.
C It is unlawful to modify or remove this copyright notice.
C See the accompanying LICENSE file for further information. 
C *************************************************************
      INTEGER FUNCTION OPENOBJ(NAME,OBJTYPE)
C
      IMPLICIT NONE
      INTEGER OBJTYPE
C
#include "UDLIST.FOR"
#include "ERRORS.FOR"
#include "DEFVAL.FOR"
C
      LOGICAL SETOK(MTFM)
      INTEGER LEFT, I
      CHARACTER NAME*(*)
      DATA SETOK /MTFM*.TRUE./
      DO 1 I=1,MTFM
      SETOK(I)=.TRUE.
 1    CONTINUE
C
C       THIS SUBROUTINE IS USED TO OPEN AN OBJECT FOR INPUT
C       OF DATA THROUGH GET, GETFRAME, DRAW, TEXT, ETC.
C       SOME ARRAY ELEMENTS NEED TO BE SET UP, SOME ARE
C       DEFAULTED, LIKE TYPOBJ=ORDINARY: THE ROUTINE THAT
C       CALLS THIS ROUTINE CHANGES THESE DEFAULTS IF NECESSARY
C       AFTER THIS ROUTINE RETURNS (SEE GETFRAME).
C
C       GETFRAME ALSO USES SPECIAL TYPE OF OPEN; THE
C       OPENED OBJECT IS NOT REGISTERED AS A NEW
C       GRAMPS_OBJECT, BUT IS REGISTERED AS A NEW
C       E&S OBJECT.  CURRENTLY THE ONLY USE
C       FOR SUCH AN OBJECT IS THE FRAME_CELL.
C
C       INCREMENT THE ID COUNTER AND GIVE THIS OBJECT A UNIQUE ID.
C       INCREMENT THE OBJECT COUNTER.
C       STORE THE INFORMATION ABOUT THIS OBJECT.
C
C       IF WE'RE DRAWING, CAN'T OPEN ANOTHER OBJECT.
C
      IF(DRAWING)THEN
        ERROR=NWDRAW
        RETURN
      END IF
C
C       TOO MANY IDS?  DON'T FORGET TO INCLUDE THE BUFFERS
C       THAT MAY BE USING ID NUMBERS.
C
      NIDS = NIDS + 1
      IF(NIDS.GT.MESIDS )THEN
        ERROR=TOOMANY
        NIDS=NIDS-1
        RETURN
      ELSE
        OBJFRLOC(NIDS)=UDFREE
      END IF
C
      IF(OBJTYPE.NE.FRMCELL)THEN
        NOBJ=NOBJ + 1
        IF(NOBJ.GT.MOBJ)THEN
          ERROR=TOOMANY
          NOBJ=NOBJ-1
          NIDS=NIDS-1
          RETURN
        END IF
        OBJFRLOC(NIDS)=UDFREE
C       LOCOBJ(NOBJ)=UDFREE
        IDOBJ(NOBJ)=NIDS
        NAMOBJ(NOBJ)=NAME
        IF(TREEEND.GE.TREESIZE)THEN
          ERROR=TOOMANY
          NOBJ=NOBJ-1
          NIDS=NIDS-1
          RETURN
        ELSE
          TREE(TREEEND+1)=NOBJ
        END IF
        KINDOBJ(NOBJ)=OBJTYPE
C       FRMBASE(NOBJ)=0
        FRMCNT(NOBJ)=0
      END IF
C
C       CHECK OUT HOW MUCH MEMORY IS LEFT.
C
      LEFT=MAXUDL - UDFREE
c      IF(LEFT.GT.32767)THEN
c        I2LEFT=32750
c      ELSE
c        I2LEFT=LEFT
c      END IF
C
      IF(LEFT.LT.HDRSIZE)THEN
        ERROR=TOOMUCH
        NIDS=NIDS-1
        NOBJ=NOBJ-1
        RETURN
      END IF
      OPENOBJ=LEFT
C
C       BEGIN THE OBJECT AT THE RIGHT PLACE IN THE UNTRANSFORMED
C       DISPLAY LIST.
C
      LENGTH=0
C
C       FOR FRAME_CELLS OR COPIES, NO TFM MATRICES
C       ARE TO BE ENTERED.
C
      IF( (OBJTYPE.EQ.FRMCELL).OR.(OBJTYPE.EQ.NEWCOPY) )RETURN
C
C       INITIALIZE FIX AND ARB AXIS AMTRICES.
C
      CALL UNIT(FIXMAT(1,1,NOBJ))
      CALL UNIT(ARBMAT(1,1,NOBJ))
      CALL UNIT(IARBMAT(1,1,NOBJ))
C  Special to avoid concatenating unless necessary
      FIXMAT(4,4,NOBJ)=0.0
      ARBMAT(4,4,NOBJ)=0.0
      IARBMAT(4,4,NOBJ)=0.0
C
C       MAKE SURE THE CURRENT VALUES OF EACH TRANSFORMATION IN TFMOBJ
C       CORRESPOND TO THE DEFUALT VALUES.
C
      CALL SETTFM(NOBJ,SETOK)
C
C       PUT IN THE INITAL INFO WORDS FOR...
C
C       DASH...
C
C      DLIST(UDFREE)=0
C      DLIST(UDFREE+1)=2
C      DLIST(UDFREE+2)=0
C      LENGTH=LENGTH+3
C      UDFREE=UDFREE+3
C
C       cylinder radius
C
      DLIST(UDFREE)=0
      DLIST(UDFREE+1)=1
      DLIST(UDFREE+2)=0.05
      LENGTH=LENGTH+3
      UDFREE=UDFREE+3
C
 999  RETURN
      END
C
C
      SUBROUTINE SETTFM(NSET,SETOK)
      IMPLICIT NONE
      INTEGER NSET
C
#include "UDLIST.FOR"
#include "DEFVAL.FOR"
      INTEGER I
      LOGICAL SETOK(MTFM)
C
C       THIS ROUTINE IS CALLED FOR THE INITAL SETUP
C       OF AN OBJECT, OR FOR A RESET OF AN OBJECT.
C       RESET MAY ALLOW ONLY SOME TFM'S TO BE RESET; THATS
C       WHAT SETOK(I) IS FOR.  WHEN OPENOBJ CALLS THIS
C       ROUTINE, SETOK(I) IS ALL .TRUE.
C
C       THIS SUBROUTINE WILL SETUP (OR RESET) DIAL
C       AND FUNCTION ASSIGNMENTS AND....
C
      DO 10 I=1,MTFM
      IF( SETOK(I) )THEN
        FNUSE(I,NSET)=0
        DEVUSE(I,NSET)=0
      END IF
 10   CONTINUE
C
C       ....SETUP OR RESET THE VALUES AND INCREMENTS 
C
      ENTRY NSETTFM(NSET,SETOK)
C
      DO 30 I=1,MTFM
      IF( SETOK(I) )THEN
        TFMVAL(I,NSET)=DEFVAL(I)
        TFMINC(I,NSET)=0
      END IF
 30   CONTINUE
C
C      MAKE SURE THE TOTAL (SUMMARY) WORD IS UPDATED.
C
      CALL ORTOTAL(NSET)
C
      RETURN
      END
