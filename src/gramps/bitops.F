C *************************************************************
C This file contains source code for the gMol computer program
C  Copyright (C) 1981-2010 by TJ O'Donnell and
C  Copyright (C) 2005-2010 gNova, Inc.
C It is unlawful to modify or remove this copyright notice.
C See the accompanying LICENSE file for further information. 
C *************************************************************
C     THIS FILE CONTAINS A BUNCH OF BIT MANIPULATION ROUTINES
C     WHICH YOU MAY OR MAY NOT NEED.  SINCE F77 DOES NOT HAVE
C     STANDARD BIT OP ROUTINES, I HAVE MADE THE STANDARD TO BE
C     THE FOLLOWING:
C      
C     FUNCTION IAND(I,J) LOGICAL ANDS ALL BITS OF INTEGERS I AND J.
C     FUNCTION IOR (I,J) LOGICAL  ORS ALL BITS OF INTEGERS I AND J.
C     FUNCTION IEOR(I,J) LOGICAL XORS ALL BITS OF INTEGERS I AND J.
C     FUNCTION NOT (I)   LOGICAL NEGATES ALL BITS OF INTEGER I.
C     FUNCTION BTEST(I,J) TELLS WHETHER BIT #J IS SET IN INTEGER I.
C     FUNCTION ISHFT(I,J) SHIFTS INTEGER J'S BITS I PLACES OVER:
C                         I>0 SHIFT LEFT
C                         I<0 SHIFT RIGHT
C
C     IN THE BEST CASE (VAX AND OTHERS?), YOU MAY LEAVE OUT THIS
C     ENTIRE FILE, AS THE ROUTINES ARE INTRINSIC IN THAT FORTRAN.  
C     ON IRIS 4D, YOU ONLY NEED BTEST AS OTHERS ARE INTRINSIC INCLUDING
C     ISHFT WHICH BTEST USES.
C
C     FEEL FREE TO USE THE ROUTINES IN THIS FILE, REWRITE THEM TO USE SOME
C     INTRINSIC FUNCTION IN YOUR COMPILER, OR ANY OTHER WAY YOU CAN
C     THINK OF.
C
C     FOR A FIRST PASS, DO NOT USE THIS FILE AT ALL, AND SEE WHAT YOU CAN
C     GET AWAY WITH.  YOUR LINKER WILL LET YOU KNOW WHICH ROUTINES YOU
C     ARE MISSING.
C
C     THERE IS A FILE bitest.f WHICH YOU CAN RUN TO VERIFY IF THESE
C     ROUTINES ARE WORKING PROPERLY.
C
      LOGICAL FUNCTION BTEST(I,J)
C
      INTEGER I,J
C
C      TEST WHETHER BIT #J IS ON.
C
      BTEST=( IAND( ISHFT(1,J),I ) .NE. 0 )
C
      RETURN
      END
C
C      INTEGER FUNCTION NOT(I)
C
C      INTEGER I
C
C      NOT=INOT(I)
C
C      RETURN
C      END
C
C     LOGICAL FUNCTION IAND(I,J)
C
C     LOGICAL I,J
C
C     IAND=I.AND.J
C
C     RETURN
C     END
C
C     LOGICAL FUNCTION IOR(I,J)
C
C     LOGICAL I,J
C
C     IOR=I.OR.J
C
C     RETURN
C     END
C
C     LOGICAL FUNCTION NOT(I)
C
C     LOGICAL I
C
C     NOT=.NOT.I
C
C     RETURN
C     END
C
C     LOGICAL FUNCTION IEOR(I,J)
C
C     LOGICAL I,J
C
C     IEOR= (I.OR.J) .AND. .NOT.(I.AND.J)
C
C     RETURN
C     END
C
C     LOGICAL FUNCTION BTEST(I,J)
C
C     INTEGER I,J
C     LOGICAL IAND
C
C     BTEST=IAND(I,2**J)
C
C     RETURN
C     END
C
C     LOGICAL FUNCTION BTEST(I,J)
C
C     INTEGER I,J
C
C     BTEST=AND(I,2**J) .NE. 0
C
C     RETURN
C     END
C
C     INTEGER FUNCTION ISHFT(I,J)
C
C     INTEGER I,J
C
C     ISHFT=I*2**J
C
C     RETURN
C     END
C
C     INTEGER FUNCTION IAND(I,J)
C
C     INTEGER I,J
C
C     IAND=AND(I,J)
C
C     RETURN
C     END
C
C     INTEGER FUNCTION IOR(I,J)
C
C     INTEGER I,J
C
C     IOR=OR(I,J)
C
C     RETURN
C     END
C
C     INTEGER FUNCTION IEOR(I,J)
C
C     INTEGER I,J
C
C     IEOR=XOR(I,J)
C
C     RETURN
C     END
