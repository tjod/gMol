C *************************************************************
C This file contains source code for the gMol computer program
C  Copyright (C) 1981-2010 by TJ O'Donnell and
C  Copyright (C) 2005-2010 gNova, Inc.
C It is unlawful to modify or remove this copyright notice.
C See the accompanying LICENSE file for further information. 
C *************************************************************
      SUBROUTINE GETFRAME(ARG,SWITCHES)
C
      IMPLICIT NONE
C
#include "UDLIST.FOR"
#include "ERRORS.FOR"
      CHARACTER ARG*(*)
      CHARACTER SWITCHES*(*)
      CHARACTER FILE*255
#include "FILES.FOR"
#include "DEFVAL.FOR"
      INTEGER UDBEGIN
	INTEGER VPOINT, BASESIZE, CELLMAX, FRNUM, NREAD, I
	Integer SAVEAGF
      CHARACTER OBJNAME*(NAMMAX)
      LOGICAL PRESENT
C
C       GET THE FILE NAME  AND CHECK TO SEE IF
C       THIS NAME IS ALREADY IN USE.  IF NOT OPEN 
C       THE FILE.
C
      SAVEAGF=TUNITS(AGF)
      POINT=1
      VPOINT=1
      CALL GETSTR(ARG,POINT,FILE)
      DEFEXT='pix'
      ERROR=OPENFILE(FILE,PFILE,.FALSE.,' ')
      IF(ERROR.NE.0)THEN
        POINT=VPOINT
        CALL TELLUSER(ERROR,*999)
      END IF
C
C /OLD or /NEW to use OLD or NEW units in the file (color)
      If(MATCH(SWITCHES,'NEW'))Then
              Call setunits(NEWUNITS)
              TUNITS(AGF)=NEWUNITS
      Else If(MATCH(SWITCHES,'OLD'))Then
              Call setunits(OLDUNITS)
              TUNITS(AGF)=OLDUNITS
      End If
C
C       CHECK FOR /NAME SWITCH GIVING OBJECT NAME TO USE.
C       IF NO NAME GIVEN, ASSUME FILE NAME.
C       THE -DUPNAM IS TO CAUSE NO CARETS FROM TELLUSER (Q.V.)
C
      CALL SMATCH(SWITCHES,'NAME',OBJNAME,PRESENT)
      IF(.NOT.PRESENT)OBJNAME=NAME
      IF(IDNAME(OBJNAME).NE.0)THEN
        POINT=VPOINT
        IF(PRESENT)THEN
          CALL TELLUSER(-DUPNAM,*999)
        ELSE
          CALL TELLUSER(DUPNAM,*999)
        END IF
      END IF
      ERROR=0
C
C       OPEN THE OBJECT AS USUAL, BUT MARK IT AS A FRAMED
C       OBJECT.
C       SAVE THE SIZE OF THE BASE, SINCE THE SIZE ARRAY
C       WILL BE UPDATED BY IMPENDING CALLS TO CLOSE THE
C       FRAME_CELLS OF THIS FRAMED OBJECT.
C       INITIALIZE THE CELLMAX (MAXIMUM CELL SIZE READ).
C
      UDBEGIN=UDFREE
      CALL OPENOBJ(OBJNAME,FRAME)
      IF(ERROR.NE.0)CALL TELLUSER(ERROR,*999)
C     FRMBASE(NOBJ)=NIDS
      CALL CLOSEOBJ(FRAME)
      BASESIZE=SIZEOBJ(NOBJ)
      CELLMAX=0
      FRNUM=NIDS
      I=GETINIT()
C
C       FRAMEREAD READS FRAMES FROM A FILE
C       NIDS IS INCREMENTED FOR EACH FRAME READ
C       MULTIPLE INPUTS OF FILES ARE ALLOWED, AS IN GET
C       BUT THEY'RE ALL PILED INTO THE SAME OBJECT.
C
 10   CALL FRAMEREAD(CELLMAX,SWITCHES)
      IF(MPSERR.EQ.0)THEN
        IF(ERROR.EQ.0)THEN
          IF(POINT.NE.0)THEN
            CLOSE (UNIT=10)
            VPOINT=POINT
            CALL GETSTR(ARG,POINT,FILE)
            DEFEXT='pix'
            ERROR=OPENFILE(FILE,PFILE,.FALSE.,' ')
            IF(ERROR.NE.0)THEN
              POINT=VPOINT
              CALL TELLUSER(ERROR,*20)
            END IF
            GOTO 10
          END IF
        ELSE
          POINT=VPOINT
          CALL TELLUSER(ERROR,*20)
        END IF
      ELSE
        MPSERR=0
      END IF
C
C       NOW CALCULATE THE MAXIMUM NUMBER OF FRAMES
C       THIS IS STORED IN FRMCNT AND LATER USED
C       BY THE DISPLAY SUBROUTINE TO PICK THE CURRENT FRAME.
C       IF THERE WERE NO FRAMES READ, DELETE THE FRAMED
C       OBJECT.  IF ONLY ONE FRAME WAS READ, MARK THE
C       OBJECT AS A ONE_FRAME, FRMCNT IS 1, OF COURSE.
C       IF MORE THAN ONE FRAME WAS READ, CALCULATE
C       FRAMESTEP.
C
 20   CONTINUE
      FRNUM=NIDS-FRNUM
      IF(FRNUM.LE.0)THEN
        UDFREE=UDBEGIN
        TREEEND=TREEEND-1
        NOBJ=NOBJ-1
        NIDS=NIDS-1
        POINT=VPOINT
        CALL TELLUSER(FILEEMPTY,*999)
      ELSE
        IF(FRNUM.EQ.1)THEN
          FRMCNT(NOBJ)=1
          KINDOBJ(NOBJ)=ONEFRAME
        ELSE
          FRMCNT(NOBJ)=FRNUM
        END IF
      END IF
C
C       NOW RECORD THE SIZE OF THE FRAME BASE PLUS THE
C       SIZE OF THE LARGEST CELL READ AS THE SIZE ENTRY
C       FOR THIS OBJECT.  THIS IS DONE TO HELP THE DISPLAY
C       PROGRAM DO ITS BUFFERING.
C
C     SIZEOBJ(NOBJ)=BASESIZE + CELLMAX
C     OBJFRSIZ(IDOBJ(NOBJ))=BASESIZE + CELLMAX
C
 999  CONTINUE
      IF (PFILE .NE. STDIN) CLOSE (UNIT=PFILE)
      TUNITS(AGF)=SAVEAGF
      Call setunits(TUNITS(AGF))
      RETURN
      END
C
C
      SUBROUTINE FRAMEREAD(CELLMAX,SWITCHES)
C
      IMPLICIT NONE
C
#include "UDLIST.FOR"
#include "ERRORS.FOR"
#include "FILES.FOR"
      INTEGER UDBEGIN, I
	INTEGER CELLMAX, CELLSIZE, NREAD
      CHARACTER*(*) SWITCHES
      CHARACTER FILE*255
C
C       THIS ROUTINE READS SUCCESIVE FRAMES FROM A FILE
C       AND PUT THEM EACH INTO A SEPARATE UDL, THOUGH THEY
C       ALL COLLECTIVELY BELONG TO THE SAME GRAMPS OBJECT.
C
C       GETMORE CAN RETURN
C         1) < 0, MEANING END OF A FRAME.
C         2) = 0, MEANING NOTHING READ (END OF FILE).
C         3) > 0, MEANING N LINES READ UP TO END OF FILE.
C
 10   CONTINUE
      UDBEGIN=UDFREE
      CALL OPENOBJ(' ',FRMCELL)
      IF(ERROR.NE.0)GOTO 999
      I= GETINIT()
      NREAD=GETMORE()
      IF( (ERROR.NE.0).OR.(MPSERR.NE.0) )GOTO 30
      IF(NREAD)20,30,40
C
C       CLOSE THIS FRAME_CELL.
C       FIND OUT THE SIZE OF JUST THIS FRAME_CELL AND UPDATE
C       CELLMAX, IF THIS CELL EXCEEDS THE CURRENT MAXIMUM.
C
 20   CALL CLOSEOBJ(FRMCELL)
      CELLSIZE=LENGTH + 5
      CELLMAX=MAX(CELLMAX,CELLSIZE)
      GOTO 10
C
 30   UDFREE=UDBEGIN
      NIDS=NIDS-1
      RETURN
C
 40   CALL CLOSEOBJ(FRMCELL)
      CELLSIZE=LENGTH + 5
      CELLMAX=MAX(CELLMAX,CELLSIZE)
C
 999  RETURN
      END
