C *************************************************************
C This file contains source code for the gMol computer program
C  Copyright (C) 1981-2010 by TJ O'Donnell and
C  Copyright (C) 2005-2010 gNova, Inc.
C It is unlawful to modify or remove this copyright notice.
C See the accompanying LICENSE file for further information. 
C *************************************************************
	SUBROUTINE GETSTR(ARGLST,SPOINT,ARG)
C
	IMPLICIT NONE
C
#include "UDLIST.FOR"
#include "ERRORS.FOR"
C
	CHARACTER ARGLST*(*),ARG*(*)
	CHARACTER*1 COMMA,DQUOTE,BLANK,QUOTE,QTMP
	CHARACTER TMP*80
	INTEGER SPOINT, QPOINT, CPOINT, BPOINT, ZPOINT
	INTEGER COMMENT, LISTLEN, ARGLEN
	EXTERNAL TRIM
	COMMA=','
	DQUOTE='"'
	QUOTE=''''
	BLANK=' '
	COMMENT=0
C
C	 THIS IS A GRAMPS UTILITY ROUTINE WHICH IS USED TO
C	 PICK OUT ARGUMENTS SIMPLY AS THE STRING OF CHARACTERS
C	 IN THE COMMAND LINE STARTING AT THE 'POINT' IN THE
C	 LINE WHERE THE PARSING CURRENTLY IS, AND UP TO THE
C	 NEXT DELIMITER OR THE END OF A LINE.  A STRING MAY
C	 BE ENCLOSED IN QUOTES IF IT CONTAINS DELIMITERS.
C
C	 AN ERROR IS REPORTED IF ARG'S LEN CANNOT HOLD THE
C	 STRING.  POINT IS NOT UPDATED IN THIS CASE.
C	 IN CASE OF AN ERROR, THE ARG POINTER IS UNCHANGED.
C
	LISTLEN=LEN(ARGLST)
	ARGLEN=LEN(ARG)
C
C	 FIRST SPAN ALL LEADING BLANKS
C
	NPOINT=SPOINT+SPAN(ARGLST(SPOINT:),BLANK)
	IF(NPOINT.GT.LISTLEN)THEN
	  ARG=BLANK
	  SPOINT=0
	  NPOINT=0
	  GOTO 999
	END IF
C
C	 THEN CHECK TO SEE IF THERE'S A QUOTED STRING
C	 IF SO, JUST PICK OUT THE STRING AND FINISH UP
C
	QTMP=ARGLST(NPOINT:NPOINT)
	IF(QTMP.EQ.DQUOTE .OR. QTMP.EQ.QUOTE)THEN
	  QPOINT=INDEX(ARGLST(NPOINT+1:),QTMP)
	  IF(QPOINT.NE.0)THEN
	    TMP=ARGLST(NPOINT+1:NPOINT+QPOINT-1)
	    NPOINT=NPOINT+QPOINT+1
	    GOTO 997
	  END IF
	END IF
C
C	 CHECK FOR EITHER A BLANK OR A COMMA AND GET EVERTHING
C	 UP TO THIS DELIMITER.
C
	CPOINT=INDEX(ARGLST(NPOINT:),COMMA)
	BPOINT=INDEX(ARGLST(NPOINT:),BLANK)
	IF (BPOINT.EQ.0)THEN
	  IF(CPOINT.EQ.0)THEN
	    TMP=ARGLST(NPOINT:LISTLEN)
	    NPOINT=LISTLEN
	  ELSE
	    TMP=ARGLST(NPOINT:NPOINT+CPOINT-2)
	    NPOINT=NPOINT+CPOINT-1
	  END IF
	ELSE
	  IF( (CPOINT.EQ.0).OR.(CPOINT.GT.BPOINT) )THEN
	    TMP=ARGLST(NPOINT:NPOINT+BPOINT-2)
	    NPOINT=NPOINT+BPOINT-1
	  ELSE
	    TMP=ARGLST(NPOINT:NPOINT+CPOINT-2)
	    NPOINT=NPOINT+CPOINT-1
	  END IF
	END IF
C
C	 NOW TRANSLATE LOWER CASE TO UPPER CASE (IF USER
C	 WANTS) AND DO THE $ARG SUBSTITUTION.
C
	IF(LOWERCASE)CALL UPCASE(TMP)
	COMMENT=INDEX(TMP,'!')
	IF(COMMENT.NE.0)TMP(COMMENT:)=BLANK
	CALL ARGSUBS(TMP)
	IF(ERROR.NE.0)RETURN
C
C	 COME HERE TO FINISH UP THE ARG PARSING.
C	 NOW WE HAVE THE ARG.  SPAN BLANKS AND SKIP OVER
C	 THE FOLLOWING COMMA IF THERE IS ONE.
C	 UPDATE POINT TO POINT AFTER THE GOT ARG.
C
 997  CONTINUE
	IF(TRIM(TMP).LE.ARGLEN)THEN
	  ARG=TMP
	  IF(COMMENT.NE.0)THEN
	    SPOINT=0
	  ELSE
	    ZPOINT=NPOINT+SPAN(ARGLST(NPOINT:),BLANK)
	    IF(ZPOINT.GE.LISTLEN)THEN
	      SPOINT=0
	    ELSE
	      NPOINT=ZPOINT
	      IF(ARGLST(NPOINT:NPOINT).EQ.COMMA)THEN
	        NPOINT=NPOINT+1
	        SPOINT=NPOINT
	      ELSE
	        IF(ARGLST(NPOINT:NPOINT).EQ.'!')THEN
	          SPOINT=0
	        ELSE
	          SPOINT=NPOINT
	        END IF
	      END IF
	    END IF
	  END IF
	ELSE
	  ERROR=STRLEN
	  RETURN
	END IF
C
 999  ERROR=0
	RETURN
	END
