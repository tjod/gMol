C *************************************************************
C This file contains source code for the gMol computer program
C  Copyright (C) 1981-2010 by TJ O'Donnell and
C  Copyright (C) 2005-2010 gNova, Inc.
C It is unlawful to modify or remove this copyright notice.
C See the accompanying LICENSE file for further information. 
C *************************************************************
	SUBROUTINE SAVE(ARG,SWITCHES)
C
	IMPLICIT NONE
	CHARACTER ARG*(*),SWITCHES*(*)
C
#include "UDLIST.FOR"
#include "ERRORS.FOR"
	CHARACTER OUTLINE*80
	INTEGER START, FINISH, DEPTH, LEVEL, SIZE
	INTEGER SVFILE, BLINE, I, K
C
C	 THIS ROUTINE SAVES THE TFM VALUES OF AN OBJECT
C	 AS AN ASCII STRING WHICH IS A GRAMPS COMMAND
C	 STRING.  
C
C
C	 GET THE OBJ'S NAME
C
	POINT=1
	CALL NAMID(ARG,POINT,ID)
	IF(ERROR.NE.0)CALL TELLUSER(ERROR,*999)
C
C	 THE STRING MAY BE OUTPUT TO A .GIN FILE IF
C	 THE USER IS COLLECTING A FILE, OR TO THE TERMINAL
C
	IF(COLLECT.AND.(.NOT.SKIPCOLL) )THEN
	  SVFILE=CFILE
	  BLINE=1
	ELSE
	  SVFILE=-1
	  OUTLINE(1:1)=' '
	  BLINE=2
	END IF
C
C	 CALL WRESET TO EXAMINE WHICH TFMS ARE TO BE SAVED.
C
c	CALL WRESET(SWITCHES)
	 If(WRESET(SWITCHES))CONTINUE
C
	CALL TSCRIBE(ID,BLINE,SWITCHES,SVFILE,OUTLINE)
C
C	 IF THE /GROUP SWITHCH IS USED, SAVE EACH GROUP
C	 MEMBER, AS WELL.
C
	IF( (TYPOBJ(ID).EQ.GROUP).AND.MATCH(SWITCHES,'GROUP') )THEN
	  CALL GROUPINFO(ID,START,FINISH,DEPTH,LEVEL,SIZE)
	  IF(FINISH.EQ.0)RETURN
	  DO 10 I=START+1,FINISH
	  K=TREE(I)
	  IF(K.GT.GROUPEND)CALL TSCRIBE(K,BLINE,SWITCHES,SVFILE,OUTLINE)
 10     CONTINUE
	END IF
C
 999  RETURN
	END
C
C
	SUBROUTINE TSCRIBE(NID,BLINE,SWITCHES,SVFILE,OUTLINE)
C
	IMPLICIT NONE
	CHARACTER SWITCHES*(*),OUTLINE*(*)
	INTEGER NID, BLINE, SVFILE
C
#include "UDLIST.FOR"
#include "ERRORS.FOR"
C
	CHARACTER DEVOUT*3
	CHARACTER*12 VALOUT
	LOGICAL LWORK(WORKSIZE)
	EQUIVALENCE (WORK,LWORK)
C
	INTEGER I, J, K, ENDLINE, NAMEND
	Real SCALE
	CHARACTER*40 FUNC
	CHARACTER*12 TFMTYP(MTFM)
	CHARACTER*12 WTFTYP(WTFM)
	CHARACTER*1 TFMAXIS(MTFM)
	CHARACTER*1 WLDAXIS(WTFM)
	EXTERNAL TRIM
#include "DEFVAL.FOR"
	SAVE TFMTYP
	SAVE WTFTYP
	SAVE TFMAXIS
	SAVE WLDAXIS
C
	Integer MAXDEV
	Parameter (MAXDEV=28)
C
	DATA TFMTYP /4*'TRANSLATE',
     &	   3*'ROTATE',
     &	   4*'TRANSLATE',
     &	   3*'ROTATE',
     &	   4*'SCALE',
     &	   4*'SCALE',
     &	   6*'INTENSITY',
     &	   3*'COLOR',
     &	   2*'FRAME'/
C
	DATA WTFTYP /4*'MOVE',
     &	   10*'PERSPECTIVE'/
C
	DATA TFMAXIS /'X','Y','Z','W','X','Y','Z',
     &	   'P','Q','R','S','P','Q','R',
     &	   'P','Q','R','S','X','Y','Z','W',
     &	   'T','A','P','D','Y','E',
     &	   'H','S','V','N','I'/
C
	DATA WLDAXIS/'X','Y','Z','W',
     &	   'S','V','P','A','H','Y','F','D','E','W'/
C
C
C	 THIS ROUTINE CONSTRUCTS THE GRAMPS COMMAND STRINGS
C	 CONTAINING THE INFO ABOUT AN OBJ'S TFM'S.
C
	ENDLINE=0
C
C	 IF THE /ALL SWITCH IS USED, SAVE EVERY VALUE FOR EVERY
C	 TFM OF THE OBJ.
C
C	 IF THE /ACTIVE SWITCH IS USED, SAVE ONLY THOSE VALUES
C	 WHICH ARE ACTIVE, I.E. VALUES WHICH ARE CURRENTLY
C	 ASSIGNED TO BE UPDATED BY A DIAL, OR A FUNCTION.
C
C	 THE DEFAULT (NO SWITCH) WILL SAVE ANY VALUE THAT IS
C	 ACTIVE AND ANY VALUE THAT IS NOT THE DEFAULT VALUE
C	 (USUALLY 0) FOR THE TFM IN QUESTION.
C
C	 THE ; IS USED HERE AS A TEMPORARY DELIMITER WITHIN
C	 THE COMMAND STRING BEING CONSTRUCTED.  THE ; IS NOT
C	 SAVED IN THE FILE.
C
C	 THE WORK ARRAY HOLDS LOGICAL VALUES (SEE WRESET)
C	 SAYING WHICH TFMS ARE TO BE SAVED.
C
	DO 20 K=1,MTFM
	IF(.NOT.MATCH(SWITCHES,'ALL'))THEN
	  IF(.NOT.LWORK(K))GOTO 20
	  IF( DEVUSE(K,NID).EQ.0 )THEN
	    IF(MATCH(SWITCHES,'ACTIVE'))GOTO 20
	    IF( TFMVAL(K,NID).EQ.DEFVAL(K) )GOTO 20
	  END IF
	END IF
	SCALE=UNITS(K)
	If(TFMVAL(K,NID).EQ.0)Then
		VALOUT='0'
	Else
		WRITE(VALOUT,1000)SCALE*TFMVAL(K,NID)
	End If
	NAMEND=TRIM(NAMOBJ(NID))
	OUTLINE(BLINE:)=TFMTYP(K)//NAMOBJ(NID)(1:NAMEND)//' '//TFMAXIS(K)
     &  //','//VALOUT
	ENDLINE=TRIM(OUTLINE)+1
	IF (BTEST(FNUSE(K,NID),BADDINC) )THEN
	  If(TFMINC(K,NID).EQ.0)Then
	    VALOUT='0'
	  Else
	    WRITE(VALOUT,1000)SCALE*TFMINC(K,NID)
	  End If
	  OUTLINE(ENDLINE:)=' C'//TFMAXIS(K)//','//VALOUT
	  ENDLINE=TRIM(OUTLINE)+1
	END IF
C
C	 SAVE THE VALUE AS AN UPDATE TO A DESTINATION FUNCTION
C	 SO THAT THIS FEATURE MAY BE USED WHEN RECALLING THE
C	 TFM VALUES BY DOING THE SAVED .GIN FILE.  THE FEATURE
C	 NEED NOT BE USED, SINCE UPDATING TO A LIMIT IN ZERO
C	 STEPS OCCURRS IMMEDIATELY, AS IF THE :#STEPS HAD
C	 NOT BEEN SPECIFIED IN THE COMMAND
C
C	 IF THE /DIALS SWITCH IS USED, THEN SAVE THE DIAL AND
C	 FUNCTION ASSIGNMENTS AS WELL AS THE TFM VALUES.
C
	IF( (DEVUSE(K,NID).NE.0).AND.(MATCH(SWITCHES,'DIALS')) )Then
	  DO J=0,MAXDEV
	  IF(BTEST(DEVUSE(K,NID),J) )THEN
            CALL FUNCOBJ(FUNC,K,J,NID)
 	    IF( BTEST(FNUSE(K,NID),BADDINC) )THEN
 	      OUTLINE(ENDLINE:)=' C'//TFMAXIS(K)//','
 	      ENDLINE = ENDLINE + 4
 	    ELSE
 	      OUTLINE(ENDLINE:)=' '//TFMAXIS(K)//','
 	      ENDLINE = ENDLINE + 3
 	    END IF
	    GOTO 10
	  END IF
	  END DO
 10       CONTINUE
          OUTLINE(ENDLINE:) = FUNC
          ENDLINE = ENDLINE + INDEX(FUNC,' ')
	Else
	  OUTLINE(ENDLINE:)=':$1'
	  ENDLINE=ENDLINE+3
	End If
C
	IF(ENDLINE.NE.0)THEN
	  IF(SVFILE.NE.-1)THEN
	     WRITE(SVFILE,2000)OUTLINE(:ENDLINE-1)
	  ELSE
	     CALL GROUT(OUTLINE(:ENDLINE-1))
	  END IF
	  ENDLINE=0
	END IF
C
 20   CONTINUE
 1000 FORMAT(G12.5)
 2000 FORMAT(A)
C
C
C	 THE WORLD CAN BE SAVED, AND THEN THE EXTRA TFMS OF
C	 THE WORLDS (PERSPECTIVE AND MOVE) MUST BE CONSIDERED.
C
	IF(NID.GT.RWORLD)RETURN
	DO 40 K=1,WTFM
	IF(.NOT.MATCH(SWITCHES,'ALL'))THEN
	  IF(.NOT.LWORK(MTFM+K))GOTO 40
	  IF(DEVWLD(K,NID).EQ.0)THEN
	    IF(MATCH(SWITCHES,'ACTIVE'))GOTO 40
	    IF( WLDVAL(K,NID).EQ.DEFWLD(K) )GOTO 40
	  END IF
	END IF
	SCALE=WUNITS(K)
	If(WLDVAL(K,NID).EQ.0)Then
		VALOUT='0'
	Else
		WRITE(VALOUT,1000)WLDVAL(K,NID)*SCALE
	End If
	NAMEND=TRIM(NAMOBJ(NID))
	OUTLINE(BLINE:)=WTFTYP(K)//NAMOBJ(NID)(1:NAMEND)//' '//WLDAXIS(K)
     &  //','//VALOUT
	ENDLINE=TRIM(OUTLINE)+1
	IF( BTEST(FNWLD(K,NID),BADDINC) ) THEN
	If(WLDINC(K,NID).EQ.0)Then
		VALOUT='0'
	Else
		WRITE(VALOUT,1000)WLDINC(K,NID)*SCALE
	End If
	  OUTLINE(ENDLINE:)=' C'//WLDAXIS(K)//','//VALOUT
	  ENDLINE=TRIM(OUTLINE)+1
	END IF
C
C	 AGAIN SAVE AS A COLON LIMIT UPDATE
C
C
C	 SAVE THE DIAL ASSIGNMENTS, TOO?
C
	IF( (DEVWLD(K,NID).NE.0).AND.(MATCH(SWITCHES,'DIALS')) )Then
	  DO J=0,MAXDEV
	  IF(BTEST(DEVWLD(K,NID),J) )THEN
            CALL FUNCWLD(FUNC,K,J,NID)
	    IF( BTEST(FNWLD(K,NID),BADDINC) )THEN
	      OUTLINE(ENDLINE:)=' C'//WLDAXIS(K)//','
	      ENDLINE = ENDLINE + 4
	    ELSE
	      OUTLINE(ENDLINE:)=' '//WLDAXIS(K)//','
	      ENDLINE = ENDLINE + 4
	    END IF
	    GOTO 30
	  END IF
	  END DO
   30     CONTINUE
          OUTLINE(ENDLINE:) = FUNC
          ENDLINE = ENDLINE + INDEX(FUNC,' ')
	Else
	  OUTLINE(ENDLINE:)=':$1'
	  ENDLINE=ENDLINE+3
	End If
C
	IF(ENDLINE.NE.0)THEN
	  IF(SVFILE.NE.-1)THEN
	     WRITE(SVFILE,2000)OUTLINE(:ENDLINE-1)
	  ELSE
	     CALL GROUT(OUTLINE(:ENDLINE-1))
	  END IF
	  ENDLINE=0
	END IF
C
 40   CONTINUE
C
	RETURN
	END
